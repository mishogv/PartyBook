@page "/register"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h1>Register</h1>

@if (ShowErrors)
{
<div class="alert alert-danger" role="alert">
    @foreach (var error in Errors)
    {
<p>@error</p>}
</div>}

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Please enter your details</h5>
        <EditForm Model="RegisterModel" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="firstName">First name</label>
                <InputText Id="firstName" class="form-control" @bind-Value="RegisterModel.FirstName" />
                <ValidationMessage For="@(() => RegisterModel.FirstName)" />
            </div>
            <div class="form-group">
                <label for="lastName">Last name</label>
                <InputText Id="lastName" class="form-control" @bind-Value="RegisterModel.LastName" />
                <ValidationMessage For="@(() => RegisterModel.LastName)" />
            </div>
            <div class="form-group">
                <label for="email">Email address</label>
                <InputText Id="email" class="form-control" @bind-Value="RegisterModel.Email" />
                <ValidationMessage For="@(() => RegisterModel.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="RegisterModel.Password" />
                <ValidationMessage For="@(() => RegisterModel.Password)" />
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>

@code 
{ 
    private RegisterInputModel RegisterModel = new RegisterInputModel();
    private bool ShowErrors;
    private IEnumerable<string> Errors;

    private async Task HandleRegistration()
    {
        ShowErrors = false;

        var result = await AuthService.Register(RegisterModel);

        NavigationManager.NavigateTo("/login");

        //if (result.Successful)
        //{
        //    NavigationManager.NavigateTo("/login");

        //}
        //else
        //{
        //    Errors = result.Errors;
        //    ShowErrors = true;
        //}
    }
    }